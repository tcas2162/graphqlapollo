{"ast":null,"code":"var _jsxFileName = \"/Users/Tim/Desktop/graphqlapollo/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { ContextProvider } from '../components/context';\nimport Layout from '../components/layout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/globals.css';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\n\nfunction MyApp(_ref) {\n  let {\n    Component,\n    pageProps: {\n      session\n    }\n  } = _ref,\n      pageProps = _objectWithoutProperties(_ref.pageProps, [\"session\"]);\n\n  // set up Apollo\n  const apolloClient = new ApolloClient({\n    uri: `${process.env.NEXT_PUBLIC_STRAPI_API_URL}/graphql`,\n    cache: new InMemoryCache()\n  });\n  return __jsx(ApolloProvider, {\n    client: apolloClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(ContextProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/Tim/Desktop/graphqlapollo/pages/_app.js"],"names":["ContextProvider","Layout","ApolloClient","InMemoryCache","ApolloProvider","MyApp","Component","pageProps","session","apolloClient","uri","process","env","NEXT_PUBLIC_STRAPI_API_URL","cache"],"mappings":";;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sCAAP;AACA,OAAO,uBAAP;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,QAIO,gBAJP;;AAMA,SAASC,KAAT,OAAoE;AAAA,MAArD;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAAxB,GAAqD;AAAA,MAAfD,SAAe,iCAAxCA,SAAwC;;AAElE;AACA,QAAME,YAAY,GAAG,IAAIP,YAAJ,CAAiB;AACpCQ,IAAAA,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,0BAA2B,UADX;AAEpCC,IAAAA,KAAK,EAAE,IAAIX,aAAJ;AAF6B,GAAjB,CAArB;AAKA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEM,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF,CADF;AASD;;AAED,eAAeF,KAAf","sourcesContent":["import { ContextProvider } from '../components/context';\nimport Layout from '../components/layout';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../styles/globals.css'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider\n} from '@apollo/client';\n\nfunction MyApp({ Component, pageProps: { session, ...pageProps } }) {\n\n  // set up Apollo\n  const apolloClient = new ApolloClient({\n    uri: `${process.env.NEXT_PUBLIC_STRAPI_API_URL}/graphql`,\n    cache: new InMemoryCache()\n  });\n\n  return (\n    <ApolloProvider client={apolloClient}>\n      <ContextProvider>\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </ContextProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}