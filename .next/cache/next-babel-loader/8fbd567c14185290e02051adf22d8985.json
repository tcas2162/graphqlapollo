{"ast":null,"code":"var _jsxFileName = \"/Users/Tim/Desktop/graphqlapollo/pages/register.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { Container, Card, Form, Button, Alert } from 'react-bootstrap';\nimport { context } from '../components/context';\nimport Loading from '../components/loading';\nimport Success from '../components/success';\nexport default function CreateAccount() {\n  const {\n    user,\n    authenticationLoading,\n    createAccount,\n    googleSignIn\n  } = context();\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: buttonDisable,\n    1: setButtonDisable\n  } = useState(false);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  useEffect(() => {\n    const strapiUser = Cookies.get('strapiUser');\n    if (strapiUser) Router.push('/');\n  }, []);\n  const usernameRef = useRef();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const confirmPasswordRef = useRef();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setButtonDisable(true);\n\n    if (passwordRef.current.value !== confirmPasswordRef.current.value) {\n      setButtonDisable(false);\n      return setError('Passwords do not match');\n    }\n\n    const result = await createAccount(usernameRef.current.value, emailRef.current.value, passwordRef.current.value);\n\n    if (result.error) {\n      setError(result.data);\n    } else {\n      setError(false);\n      setSuccess(true);\n    }\n\n    setButtonDisable(false);\n  }\n\n  async function handleGoogleSubmit(e) {\n    e.preventDefault();\n    setButtonDisable(true);\n    const result = await googleSignIn();\n\n    if (result.error) {\n      setError(result.data);\n    } else {\n      setError(false);\n    }\n\n    setButtonDisable(false);\n  }\n\n  if (success) {\n    return __jsx(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"60vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, __jsx(Success, {\n      message: \"Your account was successfully created.\",\n      button: \"Go To Restaurants\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return __jsx(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"60vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, authenticationLoading || user ? __jsx(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }) : __jsx(\"div\", {\n      className: \"w-100\",\n      style: {\n        maxWidth: \"400px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      className: \"text-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \"Create An Account\"), __jsx(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, __jsx(Form.Group, {\n      className: \"mb-4\",\n      id: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, \"Username\"), __jsx(Form.Control, {\n      type: \"username\",\n      ref: usernameRef,\n      autoComplete: \"username\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    })), __jsx(Form.Group, {\n      className: \"mb-4\",\n      id: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }\n    }, \"Email\"), __jsx(Form.Control, {\n      type: \"email\",\n      ref: emailRef,\n      autoComplete: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    })), __jsx(Form.Group, {\n      className: \"mb-4\",\n      id: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }\n    }, \"Password\"), __jsx(Form.Control, {\n      type: \"password\",\n      ref: passwordRef,\n      autoComplete: \"new-password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }\n    })), __jsx(Form.Group, {\n      className: \"mb-4\",\n      id: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, \"Confirm Password\"), __jsx(Form.Control, {\n      type: \"password\",\n      ref: confirmPasswordRef,\n      autoComplete: \"new-password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    })), error && __jsx(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 31\n      }\n    }, error), __jsx(Button, {\n      className: \"w-100\",\n      type: \"submit\",\n      disabled: buttonDisable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")), __jsx(Button, {\n      className: \"w-100\",\n      onClick: handleGoogleSubmit,\n      disabled: buttonDisable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \"Sign In With Google\"))), __jsx(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Already have an account? \", __jsx(Link, {\n      href: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 42\n      }\n    }, __jsx(\"a\", {\n      style: {\n        color: \"blue\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 62\n      }\n    }, \"Log In\")))));\n  }\n}\n;","map":{"version":3,"sources":["/Users/Tim/Desktop/graphqlapollo/pages/register.js"],"names":["useState","useRef","useEffect","Cookies","Router","Link","Container","Card","Form","Button","Alert","context","Loading","Success","CreateAccount","user","authenticationLoading","createAccount","googleSignIn","error","setError","buttonDisable","setButtonDisable","success","setSuccess","strapiUser","get","push","usernameRef","emailRef","passwordRef","confirmPasswordRef","handleSubmit","e","preventDefault","current","value","result","data","handleGoogleSubmit","minHeight","maxWidth","color"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport { Container, Card, Form, Button, Alert } from 'react-bootstrap';\nimport { context } from '../components/context';\nimport Loading from '../components/loading';\nimport Success from '../components/success';\n\nexport default function CreateAccount() {\n  const { user, authenticationLoading, createAccount, googleSignIn } = context();\n  const [error, setError] = useState(false);\n  const [buttonDisable, setButtonDisable] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    const strapiUser = Cookies.get('strapiUser');\n    if (strapiUser) Router.push('/');\n  },[]);\n\n  const usernameRef         = useRef()\n  const emailRef            = useRef();\n  const passwordRef         = useRef();\n  const confirmPasswordRef  = useRef();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setButtonDisable(true);\n\n    if (passwordRef.current.value !== confirmPasswordRef.current.value) {\n      setButtonDisable(false);\n      return setError('Passwords do not match');\n    }\n\n    const result = await createAccount(\n      usernameRef.current.value, \n      emailRef.current.value, \n      passwordRef.current.value\n    );\n    \n    if (result.error) {\n      setError(result.data);\n    } else {\n      setError(false);\n      setSuccess(true);\n    }\n    setButtonDisable(false);\n  }\n\n  async function handleGoogleSubmit(e) {\n    e.preventDefault();\n    setButtonDisable(true);\n\n    const result = await googleSignIn();\n    \n    if (result.error) {\n      setError(result.data);\n    } else {\n      setError(false);\n    }\n    setButtonDisable(false);\n  }\n\n  if (success) {\n    return (\n      <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"60vh\" }}>\n        <Success\n          message=\"Your account was successfully created.\"\n          button=\"Go To Restaurants\"\n        ></Success>   \n      </Container>\n    );\n  } else {\n    return (\n      <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"60vh\" }}>      \n        {\n          authenticationLoading || user ? (\n            <Loading></Loading>\n          ) : (\n            <div className=\"w-100\" style={{ maxWidth: \"400px\"}}>\n              <Card>\n                <Card.Body>\n                  <h2 className=\"text-center mb-4\">Create An Account</h2>\n                  <Form onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-4\" id=\"username\">\n                      <Form.Label>Username</Form.Label>\n                      <Form.Control type=\"username\" ref={usernameRef} autoComplete=\"username\" required></Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mb-4\" id=\"email\">\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control type=\"email\" ref={emailRef} autoComplete=\"email\" required></Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mb-4\" id=\"password\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control type=\"password\" ref={passwordRef} autoComplete=\"new-password\" required></Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mb-4\" id=\"confirmPassword\">\n                      <Form.Label>Confirm Password</Form.Label>\n                      <Form.Control type=\"password\" ref={confirmPasswordRef} autoComplete=\"new-password\" required></Form.Control>\n                    </Form.Group>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Button className=\"w-100\" type=\"submit\" disabled={buttonDisable}>Sign Up</Button>\n                  </Form>\n                  <Button className=\"w-100\" onClick={handleGoogleSubmit} disabled={buttonDisable}>Sign In With Google</Button>\n                </Card.Body>\n              </Card>\n              <div className=\"w-100 text-center mt-2\">\n                Already have an account? <Link href=\"/login\"><a style={{color: \"blue\"}}>Log In</a></Link>\n              </div>\n            </div>\n          )\n        }\n      </Container>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}